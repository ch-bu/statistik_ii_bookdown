df1 = 5,
df2 = 50
)) +
annotate("text", label = "df1 = 3\ndf2 = 19",
color = "#fdb863", size = 5, x = 0.2, y = 1.2,
hjust = 0) +
annotate("text", label = "df1 = 1\ndf2 = 99",
color = "#e66101", size = 5, x = 0.2, y = 0.2,
hjust = 0) +
annotate("text", label = "df1 = 5\ndf2 = 50",
color = "#533c99", size = 5, x = 0.9, y = 0.7,
hjust = 0) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0), limits = c(0, 5)) +
theme(
panel.grid = element_blank(),
plot.subtitle = element_markdown()
) +
labs(
x = "F-Wert",
y = "Dichte",
title = "Beispiele verschiedener F-Verteilungen",
subtitle = ""
)
knitr::include_graphics("images/04_statistische_modellierung/ablauf.png")
# fläche_t ----------------------------------------------------------------
ggplot(NULL) +
stat_function(fun = dt, geom = "area",
xlim = c(2, 3),
fill = "steelblue",
alpha = .8,
args = list(
df = 29
)) +
stat_function(fun = dt, geom = "line",
args = list(
df = 29
)) +
# annotate("segment", x = 1.52, xend = 1.52, y = 0, yend = 0.4,
# color = "blue", size = 1) +
annotate("text", label = paste(round(dt(2, 29) * 100, 2), "%"), x = 2.4, y = 0.02,
color = "white",
size = 4,
hjust = 1) +
xlim(-3, 3) +
theme(
panel.grid = element_blank()
) +
scale_y_continuous(expand = expansion(mult = c(0, 0))) +
labs(
x = "t-Wert",
y = "Dichte",
title = "P(D|H0) bei df von 29 und einem empirischen t-Wert von 2\nbei einer gerichteten Hypothese"
)
# two_sided ---------------------------------------------------------------
ggplot(NULL) +
stat_function(fun = dt, geom = "area",
xlim = c(2, 3),
fill = "steelblue",
alpha = .8,
args = list(
df = 29
)) +
stat_function(fun = dt, geom = "line",
args = list(
df = 29
)) +
stat_function(fun = dt, geom = "area",
xlim = c(-3, -2),
fill = "steelblue",
alpha = .8,
args = list(
df = 29
)) +
# annotate("segment", x = 1.52, xend = 1.52, y = 0, yend = 0.4,
# color = "blue", size = 1) +
annotate("text", label = paste(round(dt(2, 29) * 100, 2), "%"), x = 2.4, y = 0.02,
color = "white",
size = 4,
hjust = 1) +
annotate("text", label = paste(round(dt(2, 29) * 100, 2), "%"), x = -2.1, y = 0.02,
color = "white",
size = 4,
hjust = 1) +
xlim(-3, 3) +
theme(
panel.grid = element_blank()
) +
scale_y_continuous(expand = expansion(mult = c(0, 0))) +
labs(
x = "t-Wert",
y = "Dichte",
title = "P(D|H0) bei df von 29 und einem empirischen t-Wert von 2\nbei einer ungerichteten Hypothese"
)
# fläche_t ----------------------------------------------------------------
ggplot(NULL) +
stat_function(fun = dt, geom = "area",
xlim = c(2, 3),
fill = "steelblue",
alpha = .8,
args = list(
df = 29
)) +
stat_function(fun = dt, geom = "line",
args = list(
df = 29
)) +
# annotate("segment", x = 1.52, xend = 1.52, y = 0, yend = 0.4,
# color = "blue", size = 1) +
annotate("text", label = paste(round(dt(2, 29) * 100, 2), "%"), x = 2.4, y = 0.02,
color = "white",
size = 4,
hjust = 1) +
xlim(-3, 3) +
theme(
panel.grid = element_blank()
) +
scale_y_continuous(expand = expansion(mult = c(0, 0))) +
labs(
x = "t-Wert",
y = "Dichte",
title = "P(D|H0) bei df von 29 und einem empirischen t-Wert von 2\nbei einer gerichteten Hypothese"
)
# Beispiele F-distributions -----------------------------------------------
ggplot(NULL) +
stat_function(fun = df,
geom = "line",
color = "#e66101",
args = list(
df1 = 3,
df2 = 19
)) +
stat_function(fun = df,
geom = "line",
color = "#fdb863",
args = list(
df1 = 1,
df2 = 99
)) +
stat_function(fun = df,
geom = "line",
color = "#533c99",
args = list(
df1 = 5,
df2 = 50
)) +
annotate("text", label = "df1 = 3\ndf2 = 19",
color = "#fdb863", size = 5, x = 0.2, y = 1.2,
hjust = 0) +
annotate("text", label = "df1 = 1\ndf2 = 99",
color = "#e66101", size = 5, x = 0.2, y = 0.2,
hjust = 0) +
annotate("text", label = "df1 = 5\ndf2 = 50",
color = "#533c99", size = 5, x = 0.9, y = 0.7,
hjust = 0) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0), limits = c(0, 5)) +
theme(
panel.grid = element_blank(),
plot.subtitle = element_markdown()
) +
labs(
x = "F-Wert",
y = "Dichte",
title = "Beispiele verschiedener F-Verteilungen",
subtitle = ""
)
# fläche_t ----------------------------------------------------------------
ggplot(NULL) +
stat_function(fun = dt, geom = "area",
xlim = c(2, 3),
fill = "steelblue",
alpha = .8,
args = list(
df = 29
)) +
stat_function(fun = dt, geom = "line",
args = list(
df = 29
)) +
# annotate("segment", x = 1.52, xend = 1.52, y = 0, yend = 0.4,
# color = "blue", size = 1) +
annotate("text", label = paste(round(dt(2, 29) * 100, 2), "%"), x = 2.4, y = 0.02,
color = "white",
size = 4,
hjust = 1) +
xlim(-3, 3) +
theme(
panel.grid = element_blank()
) +
scale_y_continuous(expand = expansion(mult = c(0, 0))) +
labs(
x = "t-Wert",
y = "Dichte",
title = "P(D|H0) bei df von 29 und einem empirischen t-Wert von 2\nbei einer gerichteten Hypothese"
)
# two_sided ---------------------------------------------------------------
ggplot(NULL) +
stat_function(fun = dt, geom = "area",
xlim = c(2, 3),
fill = "steelblue",
alpha = .8,
args = list(
df = 29
)) +
stat_function(fun = dt, geom = "line",
args = list(
df = 29
)) +
stat_function(fun = dt, geom = "area",
xlim = c(-3, -2),
fill = "steelblue",
alpha = .8,
args = list(
df = 29
)) +
# annotate("segment", x = 1.52, xend = 1.52, y = 0, yend = 0.4,
# color = "blue", size = 1) +
annotate("text", label = paste(round(dt(2, 29) * 100, 2), "%"), x = 2.4, y = 0.02,
color = "white",
size = 4,
hjust = 1) +
annotate("text", label = paste(round(dt(2, 29) * 100, 2), "%"), x = -2.1, y = 0.02,
color = "white",
size = 4,
hjust = 1) +
xlim(-3, 3) +
theme(
panel.grid = element_blank()
) +
scale_y_continuous(expand = expansion(mult = c(0, 0))) +
labs(
x = "t-Wert",
y = "Dichte",
title = "P(D|H0) bei df von 29 und einem empirischen t-Wert von 2\nbei einer ungerichteten Hypothese"
)
get_f_value <- function(sample_size = n) {
sample <- sample_n(book_pop, sample_size)
errors <- sample %>%
mutate(
error_c = (books - 10)**2,
error_a = (books - mean(books))**2
)
sse_c <- sum(errors$error_c)
sse_a <- sum(errors$error_a)
ssr <- sse_c - sse_a
mse <- sse_a / (sample_size - 1)
msr <- ssr / 1
msr / mse
}
plot_f_value_distribution <- function(nSims, sample_size, width) {
# Get p-values
f_values <- c(1:nSims) %>%
map_dbl(~ get_f_value(sample_size))
# p-distribution
ggplot(NULL, aes(x = f_values)) +
geom_histogram(binwidth = .05, fill = "grey80",
color = "black", boundary = 0,
aes(y = ..density..)) +
stat_function(data = data.frame(), fun = df,
geom = "line",
args = list(
df1 = 1,
df2 = sample_size - 1
)) +
labs(
title = paste0("F-Wert Verteilung mit ",
nSims, " Studien und df1 = 1 und df2 = ", sample_size - 1),
x = "F-Wert",
y = "Dichte"
) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0), limits = c(0, width),
breaks = seq(0, width, by = 1)) +
theme(
plot.margin = unit(rep(1.2, 4), "cm"),
axis.title.x = element_text(margin = margin(t = 10)),
axis.title.y = element_text(margin = margin(r = 10))
)
}
f_10 <- plot_f_value_distribution(10, 30, 6)
f_10 <- plot_f_value_distribution(10, 30, 6)
f_100 <- plot_f_value_distribution(100, 30, 6)
f_1000 <- plot_f_value_distribution(1000, 30, 6)
f_10
f_100
f_10
f_1000
f_5000 <- plot_f_value_distribution(5000, 30, 6)
f_5000
(f_10 + f_100) / (f_1000 + f_10000)
get_f_value <- function(sample_size = n) {
sample <- sample_n(book_pop, sample_size)
errors <- sample %>%
mutate(
error_c = (books - 10)**2,
error_a = (books - mean(books))**2
)
sse_c <- sum(errors$error_c)
sse_a <- sum(errors$error_a)
ssr <- sse_c - sse_a
mse <- sse_a / (sample_size - 1)
msr <- ssr / 1
msr / mse
}
plot_f_value_distribution <- function(nSims, sample_size, width) {
# Get p-values
f_values <- c(1:nSims) %>%
map_dbl(~ get_f_value(sample_size))
# p-distribution
ggplot(NULL, aes(x = f_values)) +
geom_histogram(binwidth = .05, fill = "grey80",
color = "black", boundary = 0,
aes(y = ..density..)) +
stat_function(data = data.frame(), fun = df,
geom = "line",
args = list(
df1 = 1,
df2 = sample_size - 1
)) +
labs(
title = paste0("F-Wert Verteilung mit ",
nSims, " Studien und df1 = 1 und df2 = ", sample_size - 1),
x = "F-Wert",
y = "Dichte"
) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0), limits = c(0, width),
breaks = seq(0, width, by = 1)) +
theme(
plot.margin = unit(rep(1.2, 4), "cm"),
axis.title.x = element_text(margin = margin(t = 10)),
axis.title.y = element_text(margin = margin(r = 10))
)
}
f_10 <- plot_f_value_distribution(10, 30, 6)
f_100 <- plot_f_value_distribution(100, 30, 6)
f_1000 <- plot_f_value_distribution(1000, 30, 6)
f_5000 <- plot_f_value_distribution(5000, 30, 6)
(f_10 + f_100) / (f_1000 + f_5000)
ggplot(NULL) +
stat_function(fun = df,
geom = "line",
color = "#e66101",
args = list(
df1 = 3,
df2 = 19
)) +
stat_function(fun = df,
geom = "line",
color = "#fdb863",
args = list(
df1 = 1,
df2 = 99
)) +
stat_function(fun = df,
geom = "line",
color = "#533c99",
args = list(
df1 = 5,
df2 = 50
)) +
annotate("text", label = "df1 = 3\ndf2 = 19",
color = "#fdb863", size = 5, x = 0.2, y = 1.2,
hjust = 0) +
annotate("text", label = "df1 = 1\ndf2 = 99",
color = "#e66101", size = 5, x = 0.2, y = 0.2,
hjust = 0) +
annotate("text", label = "df1 = 5\ndf2 = 50",
color = "#533c99", size = 5, x = 0.9, y = 0.7,
hjust = 0) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0), limits = c(0, 5)) +
theme(
panel.grid = element_blank(),
plot.subtitle = element_markdown()
) +
labs(
x = "F-Wert",
y = "Dichte",
title = "Beispiele verschiedener F-Verteilungen",
subtitle = ""
)
ggplot(NULL) +
stat_function(fun = df,
geom = "line",
color = "#e66101",
args = list(
df1 = 3,
df2 = 19
)) +
stat_function(fun = df,
geom = "line",
color = "#fdb863",
args = list(
df1 = 1,
df2 = 99
)) +
stat_function(fun = df,
geom = "line",
color = "#533c99",
args = list(
df1 = 5,
df2 = 50
)) +
annotate("text", label = "df1 = 3\ndf2 = 19",
color = "#fdb863", size = 5, x = 0.2, y = 1.2,
hjust = 0) +
annotate("text", label = "df1 = 1\ndf2 = 99",
color = "#e66101", size = 5, x = 0.2, y = 0.2,
hjust = 0) +
annotate("text", label = "df1 = 5\ndf2 = 50",
color = "#533c99", size = 5, x = 0.9, y = 0.7,
hjust = 0) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0), limits = c(0, 5)) +
theme(
panel.grid = element_blank(),
plot.subtitle = element_markdown()
) +
labs(
x = "F-Wert",
y = "Dichte",
title = "Beispiele verschiedener F-Verteilungen",
subtitle = ""
)
ggplot(NULL) +
stat_function(fun = df,
geom = "line",
color = "#e66101",
args = list(
df1 = 3,
df2 = 19
)) +
stat_function(fun = df,
geom = "line",
color = "#fdb863",
args = list(
df1 = 1,
df2 = 99
)) +
stat_function(fun = df,
geom = "line",
color = "#533c99",
args = list(
df1 = 5,
df2 = 50
)) +
annotate("text", label = "df1 = 3\ndf2 = 19",
color = "#fdb863", size = 5, x = 0.2, y = 1.2,
hjust = 0) +
annotate("text", label = "df1 = 1\ndf2 = 99",
color = "#e66101", size = 5, x = 0.2, y = 0.2,
hjust = 0) +
annotate("text", label = "df1 = 5\ndf2 = 50",
color = "#533c99", size = 5, x = 0.9, y = 0.7,
hjust = 0) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0), limits = c(0, 5)) +
theme(
panel.grid = element_blank(),
plot.subtitle = element_markdown()
) +
labs(
x = "F-Wert",
y = "Dichte",
title = "Beispiele verschiedener F-Verteilungen",
subtitle = ""
)
ggplot(NULL) +
stat_function(fun = df,
geom = "line",
color = "#e66101",
args = list(
df1 = 3,
df2 = 19
)) +
stat_function(fun = df,
geom = "line",
color = "#fdb863",
args = list(
df1 = 1,
df2 = 99
)) +
stat_function(fun = df,
geom = "line",
color = "#533c99",
args = list(
df1 = 5,
df2 = 50
)) +
annotate("text", label = "df1 = 3\ndf2 = 19",
color = "#fdb863", size = 5, x = 0.2, y = 1.2,
hjust = 0) +
annotate("text", label = "df1 = 1\ndf2 = 99",
color = "#e66101", size = 5, x = 0.2, y = 0.2,
hjust = 0) +
annotate("text", label = "df1 = 5\ndf2 = 50",
color = "#533c99", size = 5, x = 0.9, y = 0.7,
hjust = 0) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0), limits = c(0, 5)) +
theme(
panel.grid = element_blank(),
plot.subtitle = element_markdown()
) +
labs(
x = "F-Wert",
y = "Dichte",
title = "Beispiele verschiedener F-Verteilungen",
subtitle = ""
)
